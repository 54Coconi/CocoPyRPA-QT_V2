# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CocoPyRPA_v2.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(995, 674)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Microsoft Yahei")
        MainWindow.setFont(font)
        MainWindow.setStyleSheet("")
        MainWindow.setDockOptions(QtWidgets.QMainWindow.AllowTabbedDocks|QtWidgets.QMainWindow.AnimatedDocks)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName("centralwidget")
        self.main_verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.main_verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.main_verticalLayout.setSpacing(5)
        self.main_verticalLayout.setObjectName("main_verticalLayout")
        self.main_splitter = QtWidgets.QSplitter(self.centralwidget)
        self.main_splitter.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.main_splitter.setFrameShadow(QtWidgets.QFrame.Plain)
        self.main_splitter.setLineWidth(1)
        self.main_splitter.setOrientation(QtCore.Qt.Horizontal)
        self.main_splitter.setHandleWidth(0)
        self.main_splitter.setObjectName("main_splitter")
        self.main_left_frame = QtWidgets.QFrame(self.main_splitter)
        self.main_left_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.main_left_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.main_left_frame.setObjectName("main_left_frame")
        self.main_left_verticalLayout = QtWidgets.QVBoxLayout(self.main_left_frame)
        self.main_left_verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.main_left_verticalLayout.setSpacing(0)
        self.main_left_verticalLayout.setObjectName("main_left_verticalLayout")
        self.task_label = QtWidgets.QLabel(self.main_left_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.task_label.sizePolicy().hasHeightForWidth())
        self.task_label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Microsoft Yahei")
        self.task_label.setFont(font)
        self.task_label.setFrameShape(QtWidgets.QFrame.Box)
        self.task_label.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.task_label.setLineWidth(0)
        self.task_label.setTextFormat(QtCore.Qt.MarkdownText)
        self.task_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.task_label.setObjectName("task_label")
        self.main_left_verticalLayout.addWidget(self.task_label)
        self.tasks_view_treeView = QtWidgets.QTreeView(self.main_left_frame)
        font = QtGui.QFont()
        font.setFamily("Microsoft Yahei")
        self.tasks_view_treeView.setFont(font)
        self.tasks_view_treeView.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tasks_view_treeView.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.tasks_view_treeView.setLineWidth(0)
        self.tasks_view_treeView.setObjectName("tasks_view_treeView")
        self.tasks_view_treeView.header().setVisible(False)
        self.main_left_verticalLayout.addWidget(self.tasks_view_treeView)
        self.main_middle_frame = QtWidgets.QFrame(self.main_splitter)
        self.main_middle_frame.setStyleSheet("")
        self.main_middle_frame.setObjectName("main_middle_frame")
        self.main_middle_verticalLayout = QtWidgets.QVBoxLayout(self.main_middle_frame)
        self.main_middle_verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.main_middle_verticalLayout.setSpacing(0)
        self.main_middle_verticalLayout.setObjectName("main_middle_verticalLayout")
        self.cmd_label = QtWidgets.QLabel(self.main_middle_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cmd_label.sizePolicy().hasHeightForWidth())
        self.cmd_label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Microsoft Yahei")
        self.cmd_label.setFont(font)
        self.cmd_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.cmd_label.setLineWidth(0)
        self.cmd_label.setTextFormat(QtCore.Qt.MarkdownText)
        self.cmd_label.setObjectName("cmd_label")
        self.main_middle_verticalLayout.addWidget(self.cmd_label)
        self.cmd_and_log_splitter = QtWidgets.QSplitter(self.main_middle_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cmd_and_log_splitter.sizePolicy().hasHeightForWidth())
        self.cmd_and_log_splitter.setSizePolicy(sizePolicy)
        self.cmd_and_log_splitter.setOrientation(QtCore.Qt.Vertical)
        self.cmd_and_log_splitter.setHandleWidth(1)
        self.cmd_and_log_splitter.setObjectName("cmd_and_log_splitter")
        self.cmd_treeWidget = QtWidgets.QTreeWidget(self.cmd_and_log_splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cmd_treeWidget.sizePolicy().hasHeightForWidth())
        self.cmd_treeWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Microsoft Yahei")
        font.setBold(False)
        font.setWeight(50)
        self.cmd_treeWidget.setFont(font)
        self.cmd_treeWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.cmd_treeWidget.setAcceptDrops(True)
        self.cmd_treeWidget.setToolTip("")
        self.cmd_treeWidget.setStyleSheet("")
        self.cmd_treeWidget.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.cmd_treeWidget.setFrameShadow(QtWidgets.QFrame.Plain)
        self.cmd_treeWidget.setLineWidth(0)
        self.cmd_treeWidget.setEditTriggers(QtWidgets.QAbstractItemView.AllEditTriggers)
        self.cmd_treeWidget.setDragEnabled(True)
        self.cmd_treeWidget.setDragDropMode(QtWidgets.QAbstractItemView.DragDrop)
        self.cmd_treeWidget.setDefaultDropAction(QtCore.Qt.MoveAction)
        self.cmd_treeWidget.setIconSize(QtCore.QSize(25, 25))
        self.cmd_treeWidget.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.cmd_treeWidget.setRootIsDecorated(True)
        self.cmd_treeWidget.setUniformRowHeights(True)
        self.cmd_treeWidget.setAnimated(True)
        self.cmd_treeWidget.setHeaderHidden(True)
        self.cmd_treeWidget.setExpandsOnDoubleClick(True)
        self.cmd_treeWidget.setObjectName("cmd_treeWidget")
        item_0 = QtWidgets.QTreeWidgetItem(self.cmd_treeWidget)
        item_0 = QtWidgets.QTreeWidgetItem(self.cmd_treeWidget)
        item_0 = QtWidgets.QTreeWidgetItem(self.cmd_treeWidget)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/if"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_0.setIcon(0, icon)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        self.cmd_treeWidget.header().setCascadingSectionResizes(True)
        self.cmd_treeWidget.header().setDefaultSectionSize(200)
        self.cmd_treeWidget.header().setMinimumSectionSize(100)
        self.log_textEdit = QtWidgets.QTextEdit(self.cmd_and_log_splitter)
        font = QtGui.QFont()
        font.setFamily("Microsoft Yahei")
        font.setPointSize(9)
        font.setUnderline(False)
        self.log_textEdit.setFont(font)
        self.log_textEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.log_textEdit.setStyleSheet("")
        self.log_textEdit.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.log_textEdit.setFrameShadow(QtWidgets.QFrame.Plain)
        self.log_textEdit.setLineWidth(0)
        self.log_textEdit.setReadOnly(True)
        self.log_textEdit.setTextInteractionFlags(QtCore.Qt.TextSelectableByMouse)
        self.log_textEdit.setObjectName("log_textEdit")
        self.main_middle_verticalLayout.addWidget(self.cmd_and_log_splitter)
        self.main_verticalLayout.addWidget(self.main_splitter)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 995, 26))
        font = QtGui.QFont()
        font.setFamily("Microsoft Yahei")
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.menubar.setFont(font)
        self.menubar.setObjectName("menubar")
        self.menu_file = QtWidgets.QMenu(self.menubar)
        self.menu_file.setObjectName("menu_file")
        self.menu_view = QtWidgets.QMenu(self.menubar)
        self.menu_view.setObjectName("menu_view")
        self.menu_run = QtWidgets.QMenu(self.menubar)
        self.menu_run.setObjectName("menu_run")
        self.menu_tool = QtWidgets.QMenu(self.menubar)
        self.menu_tool.setObjectName("menu_tool")
        self.menu_theme = QtWidgets.QMenu(self.menubar)
        self.menu_theme.setObjectName("menu_theme")
        self.menu_help = QtWidgets.QMenu(self.menubar)
        self.menu_help.setInputMethodHints(QtCore.Qt.ImhNone)
        self.menu_help.setTearOffEnabled(False)
        self.menu_help.setObjectName("menu_help")
        self.menu_edit = QtWidgets.QMenu(self.menubar)
        self.menu_edit.setObjectName("menu_edit")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Microsoft Yahei")
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.statusbar.setFont(font)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.attr_edit_dockWidget = QtWidgets.QDockWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.attr_edit_dockWidget.sizePolicy().hasHeightForWidth())
        self.attr_edit_dockWidget.setSizePolicy(sizePolicy)
        self.attr_edit_dockWidget.setMinimumSize(QtCore.QSize(152, 145))
        font = QtGui.QFont()
        font.setFamily("Microsoft Yahei")
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.attr_edit_dockWidget.setFont(font)
        self.attr_edit_dockWidget.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.attr_edit_dockWidget.setAllowedAreas(QtCore.Qt.AllDockWidgetAreas)
        self.attr_edit_dockWidget.setObjectName("attr_edit_dockWidget")
        self.attr_edit_dockWidgetContents = QtWidgets.QWidget()
        self.attr_edit_dockWidgetContents.setObjectName("attr_edit_dockWidgetContents")
        self.attr_edit_verticalLayout = QtWidgets.QVBoxLayout(self.attr_edit_dockWidgetContents)
        self.attr_edit_verticalLayout.setContentsMargins(5, 5, 5, 5)
        self.attr_edit_verticalLayout.setSpacing(2)
        self.attr_edit_verticalLayout.setObjectName("attr_edit_verticalLayout")
        self.attr_edit_tableWidget = QtWidgets.QTableWidget(self.attr_edit_dockWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.attr_edit_tableWidget.sizePolicy().hasHeightForWidth())
        self.attr_edit_tableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Microsoft Yahei")
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.attr_edit_tableWidget.setFont(font)
        self.attr_edit_tableWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.attr_edit_tableWidget.setAutoFillBackground(True)
        self.attr_edit_tableWidget.setStyleSheet("")
        self.attr_edit_tableWidget.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.attr_edit_tableWidget.setFrameShadow(QtWidgets.QFrame.Plain)
        self.attr_edit_tableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContentsOnFirstShow)
        self.attr_edit_tableWidget.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.attr_edit_tableWidget.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.attr_edit_tableWidget.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.attr_edit_tableWidget.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.attr_edit_tableWidget.setShowGrid(True)
        self.attr_edit_tableWidget.setGridStyle(QtCore.Qt.CustomDashLine)
        self.attr_edit_tableWidget.setRowCount(3)
        self.attr_edit_tableWidget.setObjectName("attr_edit_tableWidget")
        self.attr_edit_tableWidget.setColumnCount(2)
        item = QtWidgets.QTableWidgetItem()
        self.attr_edit_tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.attr_edit_tableWidget.setHorizontalHeaderItem(1, item)
        self.attr_edit_tableWidget.horizontalHeader().setMinimumSectionSize(60)
        self.attr_edit_tableWidget.horizontalHeader().setStretchLastSection(True)
        self.attr_edit_tableWidget.verticalHeader().setVisible(False)
        self.attr_edit_tableWidget.verticalHeader().setStretchLastSection(False)
        self.attr_edit_verticalLayout.addWidget(self.attr_edit_tableWidget)
        self.attr_edit_dockWidget.setWidget(self.attr_edit_dockWidgetContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.attr_edit_dockWidget)
        self.op_view_dockWidget = QtWidgets.QDockWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.op_view_dockWidget.sizePolicy().hasHeightForWidth())
        self.op_view_dockWidget.setSizePolicy(sizePolicy)
        self.op_view_dockWidget.setMinimumSize(QtCore.QSize(172, 274))
        font = QtGui.QFont()
        font.setFamily("Microsoft Yahei")
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.op_view_dockWidget.setFont(font)
        self.op_view_dockWidget.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.op_view_dockWidget.setAllowedAreas(QtCore.Qt.AllDockWidgetAreas)
        self.op_view_dockWidget.setObjectName("op_view_dockWidget")
        self.op_view_dockWidgetContents = QtWidgets.QWidget()
        self.op_view_dockWidgetContents.setObjectName("op_view_dockWidgetContents")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.op_view_dockWidgetContents)
        self.verticalLayout.setContentsMargins(5, 5, 5, 0)
        self.verticalLayout.setSpacing(5)
        self.verticalLayout.setObjectName("verticalLayout")
        self.op_search_frame = QtWidgets.QFrame(self.op_view_dockWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(5)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.op_search_frame.sizePolicy().hasHeightForWidth())
        self.op_search_frame.setSizePolicy(sizePolicy)
        self.op_search_frame.setMinimumSize(QtCore.QSize(150, 30))
        self.op_search_frame.setMaximumSize(QtCore.QSize(550, 30))
        font = QtGui.QFont()
        font.setFamily("Microsoft Yahei")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.op_search_frame.setFont(font)
        self.op_search_frame.setStyleSheet("")
        self.op_search_frame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.op_search_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.op_search_frame.setLineWidth(1)
        self.op_search_frame.setObjectName("op_search_frame")
        self.search_horizontalLayout = QtWidgets.QHBoxLayout(self.op_search_frame)
        self.search_horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.search_horizontalLayout.setSpacing(0)
        self.search_horizontalLayout.setObjectName("search_horizontalLayout")
        self.op_search_line = QtWidgets.QLineEdit(self.op_search_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.op_search_line.sizePolicy().hasHeightForWidth())
        self.op_search_line.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.op_search_line.setFont(font)
        self.op_search_line.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.op_search_line.setInputMask("")
        self.op_search_line.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.op_search_line.setClearButtonEnabled(True)
        self.op_search_line.setObjectName("op_search_line")
        self.search_horizontalLayout.addWidget(self.op_search_line)
        self.op_search_btn = QtWidgets.QToolButton(self.op_search_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.op_search_btn.sizePolicy().hasHeightForWidth())
        self.op_search_btn.setSizePolicy(sizePolicy)
        self.op_search_btn.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.op_search_btn.setStyleSheet("")
        self.op_search_btn.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/search"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.op_search_btn.setIcon(icon1)
        self.op_search_btn.setIconSize(QtCore.QSize(20, 20))
        self.op_search_btn.setAutoRaise(False)
        self.op_search_btn.setObjectName("op_search_btn")
        self.search_horizontalLayout.addWidget(self.op_search_btn)
        self.verticalLayout.addWidget(self.op_search_frame)
        self.op_view_treeWidget = QtWidgets.QTreeWidget(self.op_view_dockWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.op_view_treeWidget.sizePolicy().hasHeightForWidth())
        self.op_view_treeWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Microsoft Yahei")
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.op_view_treeWidget.setFont(font)
        self.op_view_treeWidget.setMouseTracking(True)
        self.op_view_treeWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.op_view_treeWidget.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.op_view_treeWidget.setFrameShadow(QtWidgets.QFrame.Plain)
        self.op_view_treeWidget.setLineWidth(1)
        self.op_view_treeWidget.setAutoScroll(True)
        self.op_view_treeWidget.setDragEnabled(True)
        self.op_view_treeWidget.setDragDropMode(QtWidgets.QAbstractItemView.DragOnly)
        self.op_view_treeWidget.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.op_view_treeWidget.setIconSize(QtCore.QSize(30, 30))
        self.op_view_treeWidget.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.op_view_treeWidget.setAnimated(True)
        self.op_view_treeWidget.setHeaderHidden(True)
        self.op_view_treeWidget.setObjectName("op_view_treeWidget")
        self.op_view_treeWidget.headerItem().setText(0, "指令")
        item_0 = QtWidgets.QTreeWidgetItem(self.op_view_treeWidget)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_0 = QtWidgets.QTreeWidgetItem(self.op_view_treeWidget)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_0 = QtWidgets.QTreeWidgetItem(self.op_view_treeWidget)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_0 = QtWidgets.QTreeWidgetItem(self.op_view_treeWidget)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_0 = QtWidgets.QTreeWidgetItem(self.op_view_treeWidget)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_0 = QtWidgets.QTreeWidgetItem(self.op_view_treeWidget)
        item_0 = QtWidgets.QTreeWidgetItem(self.op_view_treeWidget)
        item_0 = QtWidgets.QTreeWidgetItem(self.op_view_treeWidget)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_0 = QtWidgets.QTreeWidgetItem(self.op_view_treeWidget)
        self.op_view_treeWidget.header().setVisible(False)
        self.verticalLayout.addWidget(self.op_view_treeWidget)
        self.op_view_dockWidget.setWidget(self.op_view_dockWidgetContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.op_view_dockWidget)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolBar.sizePolicy().hasHeightForWidth())
        self.toolBar.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Microsoft Yahei")
        font.setPointSize(10)
        self.toolBar.setFont(font)
        self.toolBar.setMovable(True)
        self.toolBar.setOrientation(QtCore.Qt.Horizontal)
        self.toolBar.setIconSize(QtCore.QSize(26, 26))
        self.toolBar.setFloatable(True)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.action_menu_newTaskDir = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/new-task"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_menu_newTaskDir.setIcon(icon2)
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei")
        font.setPointSize(10)
        self.action_menu_newTaskDir.setFont(font)
        self.action_menu_newTaskDir.setObjectName("action_menu_newTaskDir")
        self.action_menu_openTask = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/open-task"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_menu_openTask.setIcon(icon3)
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(10)
        self.action_menu_openTask.setFont(font)
        self.action_menu_openTask.setObjectName("action_menu_openTask")
        self.action_menu_saveTask = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/save-task"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_menu_saveTask.setIcon(icon4)
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(10)
        self.action_menu_saveTask.setFont(font)
        self.action_menu_saveTask.setObjectName("action_menu_saveTask")
        self.action_menu_attrEditor = QtWidgets.QAction(MainWindow)
        self.action_menu_attrEditor.setCheckable(True)
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(10)
        self.action_menu_attrEditor.setFont(font)
        self.action_menu_attrEditor.setObjectName("action_menu_attrEditor")
        self.action_menu_cmdLib = QtWidgets.QAction(MainWindow)
        self.action_menu_cmdLib.setCheckable(True)
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(10)
        self.action_menu_cmdLib.setFont(font)
        self.action_menu_cmdLib.setObjectName("action_menu_cmdLib")
        self.action_menu_runAll = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/run-all"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_menu_runAll.setIcon(icon5)
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(10)
        self.action_menu_runAll.setFont(font)
        self.action_menu_runAll.setPriority(QtWidgets.QAction.NormalPriority)
        self.action_menu_runAll.setObjectName("action_menu_runAll")
        self.action_menu_runOne = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/run-step"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_menu_runOne.setIcon(icon6)
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(10)
        self.action_menu_runOne.setFont(font)
        self.action_menu_runOne.setObjectName("action_menu_runOne")
        self.action_menu_runNow = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icons/run-now"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_menu_runNow.setIcon(icon7)
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(10)
        self.action_menu_runNow.setFont(font)
        self.action_menu_runNow.setObjectName("action_menu_runNow")
        self.action_menu_mouseRecord = QtWidgets.QAction(MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/icons/mouse-record"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_menu_mouseRecord.setIcon(icon8)
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(10)
        self.action_menu_mouseRecord.setFont(font)
        self.action_menu_mouseRecord.setObjectName("action_menu_mouseRecord")
        self.action_menu_keysRecord = QtWidgets.QAction(MainWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/icons/keys-record"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_menu_keysRecord.setIcon(icon9)
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(10)
        self.action_menu_keysRecord.setFont(font)
        self.action_menu_keysRecord.setObjectName("action_menu_keysRecord")
        self.action_menu_cmdDesc = QtWidgets.QAction(MainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/icons/help"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_menu_cmdDesc.setIcon(icon10)
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(10)
        self.action_menu_cmdDesc.setFont(font)
        self.action_menu_cmdDesc.setObjectName("action_menu_cmdDesc")
        self.action_menu_about = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(10)
        self.action_menu_about.setFont(font)
        self.action_menu_about.setMenuRole(QtWidgets.QAction.ApplicationSpecificRole)
        self.action_menu_about.setObjectName("action_menu_about")
        self.action_menu_checkUpdate = QtWidgets.QAction(MainWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/icons/update"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_menu_checkUpdate.setIcon(icon11)
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(10)
        self.action_menu_checkUpdate.setFont(font)
        self.action_menu_checkUpdate.setObjectName("action_menu_checkUpdate")
        self.action_menu_defaultTheme = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(10)
        self.action_menu_defaultTheme.setFont(font)
        self.action_menu_defaultTheme.setObjectName("action_menu_defaultTheme")
        self.action_menu_darkTheme = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(10)
        self.action_menu_darkTheme.setFont(font)
        self.action_menu_darkTheme.setObjectName("action_menu_darkTheme")
        self.action_menu_lightTheme = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(10)
        self.action_menu_lightTheme.setFont(font)
        self.action_menu_lightTheme.setObjectName("action_menu_lightTheme")
        self.action_menu_protectEyesTheme = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(10)
        self.action_menu_protectEyesTheme.setFont(font)
        self.action_menu_protectEyesTheme.setObjectName("action_menu_protectEyesTheme")
        self.action_menu_python = QtWidgets.QAction(MainWindow)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/icons/python"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_menu_python.setIcon(icon12)
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(10)
        self.action_menu_python.setFont(font)
        self.action_menu_python.setObjectName("action_menu_python")
        self.action_menu_screenShot = QtWidgets.QAction(MainWindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/icons/screen-shot"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_menu_screenShot.setIcon(icon13)
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(10)
        self.action_menu_screenShot.setFont(font)
        self.action_menu_screenShot.setObjectName("action_menu_screenShot")
        self.action_menu_setting = QtWidgets.QAction(MainWindow)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/icons/setting"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_menu_setting.setIcon(icon14)
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(10)
        self.action_menu_setting.setFont(font)
        self.action_menu_setting.setObjectName("action_menu_setting")
        self.action_menu_newTaskFile = QtWidgets.QAction(MainWindow)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/icons/new-file"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_menu_newTaskFile.setIcon(icon15)
        self.action_menu_newTaskFile.setObjectName("action_menu_newTaskFile")
        self.action_menu_undo = QtWidgets.QAction(MainWindow)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/icons/undo"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_menu_undo.setIcon(icon16)
        self.action_menu_undo.setObjectName("action_menu_undo")
        self.action_menu_redo = QtWidgets.QAction(MainWindow)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/icons/redo"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_menu_redo.setIcon(icon17)
        self.action_menu_redo.setObjectName("action_menu_redo")
        self.action_menu_attrBind = QtWidgets.QAction(MainWindow)
        self.action_menu_attrBind.setObjectName("action_menu_attrBind")
        self.action_menu_clear = QtWidgets.QAction(MainWindow)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/icons/clear"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_menu_clear.setIcon(icon18)
        self.action_menu_clear.setObjectName("action_menu_clear")
        self.action_menu_runAuto = QtWidgets.QAction(MainWindow)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/icons/run-auto"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_menu_runAuto.setIcon(icon19)
        self.action_menu_runAuto.setObjectName("action_menu_runAuto")
        self.menu_file.addAction(self.action_menu_newTaskDir)
        self.menu_file.addAction(self.action_menu_newTaskFile)
        self.menu_file.addAction(self.action_menu_openTask)
        self.menu_file.addAction(self.action_menu_saveTask)
        self.menu_file.addSeparator()
        self.menu_file.addAction(self.action_menu_setting)
        self.menu_view.addAction(self.action_menu_attrEditor)
        self.menu_view.addAction(self.action_menu_cmdLib)
        self.menu_view.addSeparator()
        self.menu_view.addAction(self.action_menu_attrBind)
        self.menu_run.addAction(self.action_menu_runAll)
        self.menu_run.addAction(self.action_menu_runOne)
        self.menu_run.addAction(self.action_menu_runNow)
        self.menu_run.addSeparator()
        self.menu_run.addAction(self.action_menu_runAuto)
        self.menu_tool.addAction(self.action_menu_screenShot)
        self.menu_tool.addSeparator()
        self.menu_tool.addAction(self.action_menu_mouseRecord)
        self.menu_tool.addAction(self.action_menu_keysRecord)
        self.menu_tool.addSeparator()
        self.menu_tool.addAction(self.action_menu_python)
        self.menu_theme.addAction(self.action_menu_defaultTheme)
        self.menu_theme.addAction(self.action_menu_darkTheme)
        self.menu_theme.addAction(self.action_menu_lightTheme)
        self.menu_theme.addAction(self.action_menu_protectEyesTheme)
        self.menu_help.addAction(self.action_menu_cmdDesc)
        self.menu_help.addAction(self.action_menu_about)
        self.menu_help.addAction(self.action_menu_checkUpdate)
        self.menu_edit.addAction(self.action_menu_undo)
        self.menu_edit.addAction(self.action_menu_redo)
        self.menu_edit.addAction(self.action_menu_clear)
        self.menubar.addAction(self.menu_file.menuAction())
        self.menubar.addAction(self.menu_edit.menuAction())
        self.menubar.addAction(self.menu_view.menuAction())
        self.menubar.addAction(self.menu_run.menuAction())
        self.menubar.addAction(self.menu_tool.menuAction())
        self.menubar.addAction(self.menu_theme.menuAction())
        self.menubar.addAction(self.menu_help.menuAction())
        self.toolBar.addAction(self.action_menu_newTaskDir)
        self.toolBar.addAction(self.action_menu_newTaskFile)
        self.toolBar.addAction(self.action_menu_openTask)
        self.toolBar.addAction(self.action_menu_saveTask)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_menu_undo)
        self.toolBar.addAction(self.action_menu_redo)
        self.toolBar.addAction(self.action_menu_clear)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_menu_runAll)
        self.toolBar.addAction(self.action_menu_runOne)
        self.toolBar.addAction(self.action_menu_runNow)
        self.toolBar.addAction(self.action_menu_runAuto)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_menu_mouseRecord)
        self.toolBar.addAction(self.action_menu_keysRecord)
        self.toolBar.addAction(self.action_menu_python)
        self.toolBar.addAction(self.action_menu_screenShot)
        self.toolBar.addSeparator()

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.task_label.setText(_translate("MainWindow", "### 任务列表"))
        self.tasks_view_treeView.setStatusTip(_translate("MainWindow", "任务列表"))
        self.cmd_label.setText(_translate("MainWindow", "### 指令编辑"))
        self.cmd_treeWidget.setStatusTip(_translate("MainWindow", "指令编辑区"))
        self.cmd_treeWidget.headerItem().setText(0, _translate("MainWindow", "指令"))
        __sortingEnabled = self.cmd_treeWidget.isSortingEnabled()
        self.cmd_treeWidget.setSortingEnabled(False)
        self.cmd_treeWidget.topLevelItem(0).setText(0, _translate("MainWindow", "指令1"))
        self.cmd_treeWidget.topLevelItem(1).setText(0, _translate("MainWindow", "指令2"))
        self.cmd_treeWidget.topLevelItem(2).setText(0, _translate("MainWindow", "指令3"))
        self.cmd_treeWidget.topLevelItem(2).child(0).setText(0, _translate("MainWindow", "指令3.1"))
        self.cmd_treeWidget.topLevelItem(2).child(1).setText(0, _translate("MainWindow", "指令3.2"))
        self.cmd_treeWidget.setSortingEnabled(__sortingEnabled)
        self.log_textEdit.setToolTip(_translate("MainWindow", "指令执行日志"))
        self.log_textEdit.setStatusTip(_translate("MainWindow", "指令执行日志"))
        self.log_textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Microsoft Yahei\',\'Microsoft Yahei\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'微软雅黑\',\'幼圆\'; font-size:12pt;\"><br /></p></body></html>"))
        self.menu_file.setTitle(_translate("MainWindow", "文件"))
        self.menu_view.setTitle(_translate("MainWindow", "视图"))
        self.menu_run.setTitle(_translate("MainWindow", "运行"))
        self.menu_tool.setTitle(_translate("MainWindow", "工具"))
        self.menu_theme.setTitle(_translate("MainWindow", "主题"))
        self.menu_help.setTitle(_translate("MainWindow", "帮助"))
        self.menu_edit.setTitle(_translate("MainWindow", "编辑"))
        self.attr_edit_dockWidget.setWindowTitle(_translate("MainWindow", "属性编辑器"))
        self.attr_edit_tableWidget.setToolTip(_translate("MainWindow", "指令属性编辑器"))
        self.attr_edit_tableWidget.setStatusTip(_translate("MainWindow", "指令属性编辑器"))
        self.attr_edit_tableWidget.setSortingEnabled(False)
        item = self.attr_edit_tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "属性"))
        item = self.attr_edit_tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "值"))
        self.op_view_dockWidget.setToolTip(_translate("MainWindow", "指令操作库"))
        self.op_view_dockWidget.setStatusTip(_translate("MainWindow", "指令操作库"))
        self.op_view_dockWidget.setWindowTitle(_translate("MainWindow", "指令操作库"))
        self.op_search_line.setStatusTip(_translate("MainWindow", "指令搜索"))
        self.op_search_line.setPlaceholderText(_translate("MainWindow", "搜索指令..."))
        self.op_view_treeWidget.setStatusTip(_translate("MainWindow", "指令"))
        __sortingEnabled = self.op_view_treeWidget.isSortingEnabled()
        self.op_view_treeWidget.setSortingEnabled(False)
        self.op_view_treeWidget.topLevelItem(0).setText(0, _translate("MainWindow", "鼠标"))
        self.op_view_treeWidget.topLevelItem(0).child(0).setText(0, _translate("MainWindow", "鼠标左键点击 (MouseClickCmd)"))
        self.op_view_treeWidget.topLevelItem(0).child(1).setText(0, _translate("MainWindow", "鼠标右键点击 (MouseClickCmd)"))
        self.op_view_treeWidget.topLevelItem(0).child(2).setText(0, _translate("MainWindow", "鼠标中键点击 (MouseClickCmd)"))
        self.op_view_treeWidget.topLevelItem(0).child(3).setText(0, _translate("MainWindow", "鼠标定点移动 (MouseMoveToCmd)"))
        self.op_view_treeWidget.topLevelItem(0).child(4).setText(0, _translate("MainWindow", "鼠标相对移动 (MouseMoveRelCmd)"))
        self.op_view_treeWidget.topLevelItem(0).child(5).setText(0, _translate("MainWindow", "鼠标定点拖动 (MouseDragToCmd)"))
        self.op_view_treeWidget.topLevelItem(0).child(6).setText(0, _translate("MainWindow", "鼠标相对拖动 (MouseDragRelCmd)"))
        self.op_view_treeWidget.topLevelItem(0).child(7).setText(0, _translate("MainWindow", "鼠标竖直滚动 (MouseScrollCmd)"))
        self.op_view_treeWidget.topLevelItem(0).child(8).setText(0, _translate("MainWindow", "鼠标水平滚动 (MouseScrollCmd)"))
        self.op_view_treeWidget.topLevelItem(1).setText(0, _translate("MainWindow", "键盘"))
        self.op_view_treeWidget.topLevelItem(1).child(0).setText(0, _translate("MainWindow", "按下按键 (KeyPressCmd)"))
        self.op_view_treeWidget.topLevelItem(1).child(1).setText(0, _translate("MainWindow", "释放按键 (KeyReleaseCmd)"))
        self.op_view_treeWidget.topLevelItem(1).child(2).setText(0, _translate("MainWindow", "敲击按键 (KeyTapCmd)"))
        self.op_view_treeWidget.topLevelItem(1).child(3).setText(0, _translate("MainWindow", "热键组合 (HotKeyCmd)"))
        self.op_view_treeWidget.topLevelItem(1).child(4).setText(0, _translate("MainWindow", "键盘输入字符串 (KeyTypeTextCmd)"))
        self.op_view_treeWidget.topLevelItem(2).setText(0, _translate("MainWindow", "系统"))
        self.op_view_treeWidget.topLevelItem(2).child(0).setText(0, _translate("MainWindow", "运行程序"))
        self.op_view_treeWidget.topLevelItem(2).child(1).setText(0, _translate("MainWindow", "执行CMD指令"))
        self.op_view_treeWidget.topLevelItem(3).setText(0, _translate("MainWindow", "文件"))
        self.op_view_treeWidget.topLevelItem(3).child(0).setText(0, _translate("MainWindow", "如果文件存在"))
        self.op_view_treeWidget.topLevelItem(3).child(1).setText(0, _translate("MainWindow", "获取文件"))
        self.op_view_treeWidget.topLevelItem(3).child(2).setText(0, _translate("MainWindow", "打开文件"))
        self.op_view_treeWidget.topLevelItem(3).child(3).setText(0, _translate("MainWindow", "删除文件"))
        self.op_view_treeWidget.topLevelItem(3).child(4).setText(0, _translate("MainWindow", "复制文件"))
        self.op_view_treeWidget.topLevelItem(3).child(5).setText(0, _translate("MainWindow", "移动文件"))
        self.op_view_treeWidget.topLevelItem(3).child(6).setText(0, _translate("MainWindow", "重命名文件"))
        self.op_view_treeWidget.topLevelItem(3).child(7).setText(0, _translate("MainWindow", "新建文件夹"))
        self.op_view_treeWidget.topLevelItem(3).child(8).setText(0, _translate("MainWindow", "列出文件夹内容"))
        self.op_view_treeWidget.topLevelItem(3).child(9).setText(0, _translate("MainWindow", "压缩文件"))
        self.op_view_treeWidget.topLevelItem(3).child(10).setText(0, _translate("MainWindow", "解压文件"))
        self.op_view_treeWidget.topLevelItem(3).child(11).setText(0, _translate("MainWindow", "从文件读取文本"))
        self.op_view_treeWidget.topLevelItem(3).child(12).setText(0, _translate("MainWindow", "将文本写入文件"))
        self.op_view_treeWidget.topLevelItem(3).child(13).setText(0, _translate("MainWindow", "从链接下载文件 (DownloadCmd)"))
        self.op_view_treeWidget.topLevelItem(4).setText(0, _translate("MainWindow", "流程控制"))
        self.op_view_treeWidget.topLevelItem(4).child(0).setText(0, _translate("MainWindow", "If-如果"))
        self.op_view_treeWidget.topLevelItem(4).child(1).setText(0, _translate("MainWindow", "Else-否则"))
        self.op_view_treeWidget.topLevelItem(4).child(2).setText(0, _translate("MainWindow", "Wait-等待"))
        self.op_view_treeWidget.topLevelItem(4).child(3).setText(0, _translate("MainWindow", "Loop-重复"))
        self.op_view_treeWidget.topLevelItem(4).child(4).setText(0, _translate("MainWindow", "Break-跳出循环"))
        self.op_view_treeWidget.topLevelItem(4).child(5).setText(0, _translate("MainWindow", "Stop-终止流程"))
        self.op_view_treeWidget.topLevelItem(4).child(6).setText(0, _translate("MainWindow", "Interval-间隔 (s)"))
        self.op_view_treeWidget.topLevelItem(4).child(7).setText(0, _translate("MainWindow", "Flag-标记"))
        self.op_view_treeWidget.topLevelItem(4).child(8).setText(0, _translate("MainWindow", "Goto-转到"))
        self.op_view_treeWidget.topLevelItem(5).setText(0, _translate("MainWindow", "web自动化"))
        self.op_view_treeWidget.topLevelItem(6).setText(0, _translate("MainWindow", "手机自动化"))
        self.op_view_treeWidget.topLevelItem(7).setText(0, _translate("MainWindow", "消息显示"))
        self.op_view_treeWidget.topLevelItem(7).child(0).setText(0, _translate("MainWindow", "消息对话窗"))
        self.op_view_treeWidget.topLevelItem(7).child(1).setText(0, _translate("MainWindow", "列表对话窗"))
        self.op_view_treeWidget.topLevelItem(7).child(2).setText(0, _translate("MainWindow", "确定对话窗"))
        self.op_view_treeWidget.topLevelItem(7).child(3).setText(0, _translate("MainWindow", "输入数据对话窗"))
        self.op_view_treeWidget.topLevelItem(7).child(4).setText(0, _translate("MainWindow", "显示等待对话窗"))
        self.op_view_treeWidget.setSortingEnabled(__sortingEnabled)
        self.toolBar.setWindowTitle(_translate("MainWindow", "工具栏"))
        self.action_menu_newTaskDir.setText(_translate("MainWindow", "新建任务目录"))
        self.action_menu_newTaskDir.setToolTip(_translate("MainWindow", "新建任务目录"))
        self.action_menu_newTaskDir.setStatusTip(_translate("MainWindow", "新建任务目录"))
        self.action_menu_newTaskDir.setShortcut(_translate("MainWindow", "Ctrl+Shift+N"))
        self.action_menu_openTask.setText(_translate("MainWindow", "打开任务"))
        self.action_menu_openTask.setToolTip(_translate("MainWindow", "打开任务json文件"))
        self.action_menu_openTask.setStatusTip(_translate("MainWindow", "打开任务json文件"))
        self.action_menu_openTask.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.action_menu_saveTask.setText(_translate("MainWindow", "保存任务"))
        self.action_menu_saveTask.setToolTip(_translate("MainWindow", "保存任务为json文件"))
        self.action_menu_saveTask.setStatusTip(_translate("MainWindow", "保存任务为json文件"))
        self.action_menu_saveTask.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.action_menu_attrEditor.setText(_translate("MainWindow", "属性编辑器"))
        self.action_menu_attrEditor.setToolTip(_translate("MainWindow", "属性编辑器"))
        self.action_menu_cmdLib.setText(_translate("MainWindow", "指令操作库"))
        self.action_menu_runAll.setText(_translate("MainWindow", "运行全部"))
        self.action_menu_runAll.setToolTip(_translate("MainWindow", "运行全部指令"))
        self.action_menu_runAll.setStatusTip(_translate("MainWindow", "运行全部指令"))
        self.action_menu_runAll.setShortcut(_translate("MainWindow", "Ctrl+Shift+F5"))
        self.action_menu_runOne.setText(_translate("MainWindow", "指定运行"))
        self.action_menu_runOne.setToolTip(_translate("MainWindow", "运行当前选中指令"))
        self.action_menu_runOne.setStatusTip(_translate("MainWindow", "运行当前选中指令"))
        self.action_menu_runOne.setShortcut(_translate("MainWindow", "Ctrl+Shift+F6"))
        self.action_menu_runNow.setText(_translate("MainWindow", "从当前运行"))
        self.action_menu_runNow.setStatusTip(_translate("MainWindow", "从当前运行"))
        self.action_menu_runNow.setShortcut(_translate("MainWindow", "Ctrl+Shift+F7"))
        self.action_menu_mouseRecord.setText(_translate("MainWindow", "鼠标录制"))
        self.action_menu_mouseRecord.setStatusTip(_translate("MainWindow", "鼠标录制"))
        self.action_menu_mouseRecord.setShortcut(_translate("MainWindow", "Ctrl+Shift+M"))
        self.action_menu_keysRecord.setText(_translate("MainWindow", "键盘录制"))
        self.action_menu_keysRecord.setStatusTip(_translate("MainWindow", "键盘录制"))
        self.action_menu_keysRecord.setShortcut(_translate("MainWindow", "Ctrl+Shift+K"))
        self.action_menu_cmdDesc.setText(_translate("MainWindow", "功能说明"))
        self.action_menu_cmdDesc.setStatusTip(_translate("MainWindow", "功能说明"))
        self.action_menu_about.setText(_translate("MainWindow", "关于"))
        self.action_menu_checkUpdate.setText(_translate("MainWindow", "检查更新"))
        self.action_menu_defaultTheme.setText(_translate("MainWindow", "默认"))
        self.action_menu_darkTheme.setText(_translate("MainWindow", "深色"))
        self.action_menu_lightTheme.setText(_translate("MainWindow", "浅色"))
        self.action_menu_protectEyesTheme.setText(_translate("MainWindow", "护眼"))
        self.action_menu_python.setText(_translate("MainWindow", "运行Python脚本"))
        self.action_menu_python.setStatusTip(_translate("MainWindow", "运行Python脚本"))
        self.action_menu_screenShot.setText(_translate("MainWindow", "截图"))
        self.action_menu_screenShot.setIconText(_translate("MainWindow", "截图/获取坐标"))
        self.action_menu_screenShot.setToolTip(_translate("MainWindow", "截图/获取坐标"))
        self.action_menu_screenShot.setStatusTip(_translate("MainWindow", "截图或获取屏幕坐标"))
        self.action_menu_screenShot.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.action_menu_setting.setText(_translate("MainWindow", "设置"))
        self.action_menu_newTaskFile.setText(_translate("MainWindow", "新建任务文件"))
        self.action_menu_newTaskFile.setStatusTip(_translate("MainWindow", "新建任务文件"))
        self.action_menu_newTaskFile.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.action_menu_undo.setText(_translate("MainWindow", "撤销"))
        self.action_menu_undo.setShortcut(_translate("MainWindow", "Ctrl+Z"))
        self.action_menu_redo.setText(_translate("MainWindow", "重做"))
        self.action_menu_redo.setShortcut(_translate("MainWindow", "Ctrl+Y"))
        self.action_menu_attrBind.setText(_translate("MainWindow", "属性绑定"))
        self.action_menu_clear.setText(_translate("MainWindow", "清空"))
        self.action_menu_clear.setShortcut(_translate("MainWindow", "Ctrl+Del"))
        self.action_menu_runAuto.setText(_translate("MainWindow", "自动运行"))
import resources_rc
