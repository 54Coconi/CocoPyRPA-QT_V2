# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'code_editor.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_CodeEditorUI(object):
    def setupUi(self, CodeEditorUI):
        CodeEditorUI.setObjectName("CodeEditorUI")
        CodeEditorUI.resize(776, 552)
        CodeEditorUI.setStyleSheet("QWidget{\n"
"    background-color: #313034;\n"
"    color: #f1f1f1;\n"
"    font-size: 16px;\n"
"    border: 0px solid #423f48;\n"
"    font-family: \"Microsoft YaHei\";\n"
"    margin: 0px;\n"
"}\n"
"#widget_codeEdit{\n"
"    border: 2px solid #423f48;\n"
"}\n"
"\n"
"/* ============================= QMessageBox ============================= */\n"
"QMessageBox{\n"
"    background-color: rgba(33,33,33, 80);\n"
"}\n"
"QMessageBox > QLabel{\n"
"    font-family: \"Microsoft YaHei\";\n"
"    font-size: 20px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgba(33,33,33, 80);\n"
"}\n"
"\n"
"/* ============================= QPushButton ============================= */\n"
"QPushButton{\n"
"    border: none;\n"
"    width: 35px;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color:#423f48;\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    background-color:#444444;\n"
"}\n"
"\n"
"\n"
"/* ============================= QLabel ============================= */\n"
"QLabel{\n"
"    font-size: 15px;\n"
"    color: #FFFFFF;\n"
"    background-color: #2A292B;\n"
"    border:none;\n"
"}\n"
"\n"
"\n"
"/* ============================== QToolButton ============================== */\n"
"QToolButton{\n"
"    color: white; /*字体颜色*/\n"
"    background-color: rgb(77,77,77); /*背景色*/ \n"
"    \n"
"    border-style: outset;\n"
"    border-width: 0px;\n"
"    border-radius: 8px; /*边界圆滑*/\n"
"    border-color: #8B7355;\n"
"    min-width: 2em;\n"
"    \n"
"    font-family: \"Microsoft YaHei UI\";\n"
"    font:  16px;\n"
"    padding: 1px;\n"
"}\n"
"\n"
"QToolButton:hover{\n"
"    background-color: #4076B2;\n"
"}\n"
"\n"
"QToolButton:pressed{\n"
"    background-color: #95890D; /*伪状态经过时背景色*/ \n"
"    border-style: inset;\n"
"}\n"
"\n"
"QToolButton:!enabled{\n"
"    background-color: rgb(120, 120, 120);\n"
"    border-style: inset;\n"
"}\n"
"\n"
"\n"
"/* ===================================== 日志窗口  ===================================== */\n"
"QTextEdit{\n"
"    border: 2px solid rgb(66,63,72);\n"
"    border-top-width: 2px;\n"
"    border-radius: 1px; /* 设置圆角 */\n"
"    background-color: rgb(49,48,52);\n"
"    background-attachment: scroll;\n"
"}\n"
"\n"
"\n"
"/* ====================================  滚动条样式 ==================================== */\n"
"/* ----------------------- 垂直滚动条 ----------------------- */\n"
"QScrollBar:vertical{\n"
"    margin: 16px 0px 16px 0px;\n"
"    background-color: transparent;\n"
"    border: 0px solid rgb(49,48,52);\n"
"    width: 10px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical{\n"
"    background-color: rgba(147,94,16,255);\n"
"    border-radius: 5px;\n"
"    width: 11px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover{\n"
"    background-color: rgba(234,149,28,255);\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical{\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"    background-color: transparent;\n"
"    border: 0px solid transparent;\n"
"    border-top-left-radius: 5px;\n"
"    border-top-right-radius: 5px;\n"
"    height:14px;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical{\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"    background-color: transparent;\n"
"    border: 0px solid transparent;\n"
"    border-bottom-left-radius: 4px;\n"
"    border-bottom-right-radius: 4px;\n"
"    height:14px;\n"
"}\n"
"\n"
"/* 滚动条上下按钮 */\n"
"QScrollBar::up-arrow:vertical{\n"
"    border-image:url(:/icons/scrollV-up-darkblue);\n"
"    width:11px;\n"
"    height:11px;\n"
"}\n"
"\n"
"QScrollBar::down-arrow:vertical{\n"
"    border-image:url(:/icons/scrollV-down-darkblue);\n"
"    width:11px;\n"
"    height:11px;\n"
"}\n"
"\n"
"QScrollBar::sub-page:vertical,QScrollBar::add-page:vertical{\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"/* ----------------------- 水平滚动条 ----------------------- */\n"
"\n"
"QScrollBar:horizontal{\n"
"    margin: 0px 0px 0px 0px;\n"
"    background-color: transparent;\n"
"    border: none;\n"
"    height: 8px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal{\n"
"    background-color: rgba(147,94,16,255);\n"
"    border-radius: 4px;\n"
"    height: 8px;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal:hover {\n"
"    background-color: rgba(234,149,28,255);\n"
"}\n"
"\n"
"QScrollBar::add-line:horizontal{\n"
"    subcontrol-position: right;\n"
"    subcontrol-origin: margin;\n"
"    background-color: transparent;\n"
"    border: 1px solid transparent;\n"
"    height: 1px;\n"
"    width: 1px;\n"
"}\n"
"\n"
"QScrollBar::sub-line:horizontal{\n"
"    subcontrol-position: left;\n"
"    subcontrol-origin: margin;\n"
"    background-color: transparent;\n"
"    border: 1px solid transparent;\n"
"    height: 1px;\n"
"    width: 1px;\n"
"}\n"
"\n"
"QScrollBar::left-arrow:horizontal{\n"
"    border-image:url(:/icons/);\n"
"    width: 1px;\n"
"    height: 1px;\n"
"}\n"
"\n"
"QScrollBar::right-arrow:horizontal{\n"
"    border-image:url(:/icons/);\n"
"    width: 1px;\n"
"    height: 1px;\n"
"}\n"
"\n"
"QScrollBar::sub-page:horizontal,QScrollBar::add-page:horizontal{\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"\n"
"")
        self.mainVerticalLayout = QtWidgets.QVBoxLayout(CodeEditorUI)
        self.mainVerticalLayout.setContentsMargins(3, 3, 3, 3)
        self.mainVerticalLayout.setSpacing(3)
        self.mainVerticalLayout.setObjectName("mainVerticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setContentsMargins(5, 0, 0, 0)
        self.horizontalLayout.setSpacing(5)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.toolButton_new = QtWidgets.QToolButton(CodeEditorUI)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolButton_new.sizePolicy().hasHeightForWidth())
        self.toolButton_new.setSizePolicy(sizePolicy)
        self.toolButton_new.setIconSize(QtCore.QSize(30, 30))
        self.toolButton_new.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.toolButton_new.setAutoRaise(False)
        self.toolButton_new.setArrowType(QtCore.Qt.NoArrow)
        self.toolButton_new.setObjectName("toolButton_new")
        self.horizontalLayout.addWidget(self.toolButton_new)
        self.toolButton_open = QtWidgets.QToolButton(CodeEditorUI)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolButton_open.sizePolicy().hasHeightForWidth())
        self.toolButton_open.setSizePolicy(sizePolicy)
        self.toolButton_open.setIconSize(QtCore.QSize(30, 30))
        self.toolButton_open.setObjectName("toolButton_open")
        self.horizontalLayout.addWidget(self.toolButton_open)
        self.toolButton_save = QtWidgets.QToolButton(CodeEditorUI)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolButton_save.sizePolicy().hasHeightForWidth())
        self.toolButton_save.setSizePolicy(sizePolicy)
        self.toolButton_save.setIconSize(QtCore.QSize(30, 30))
        self.toolButton_save.setObjectName("toolButton_save")
        self.horizontalLayout.addWidget(self.toolButton_save)
        self.toolButton_saveAs = QtWidgets.QToolButton(CodeEditorUI)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolButton_saveAs.sizePolicy().hasHeightForWidth())
        self.toolButton_saveAs.setSizePolicy(sizePolicy)
        self.toolButton_saveAs.setIconSize(QtCore.QSize(30, 30))
        self.toolButton_saveAs.setObjectName("toolButton_saveAs")
        self.horizontalLayout.addWidget(self.toolButton_saveAs)
        self.toolButton_run = QtWidgets.QToolButton(CodeEditorUI)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolButton_run.sizePolicy().hasHeightForWidth())
        self.toolButton_run.setSizePolicy(sizePolicy)
        self.toolButton_run.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.toolButton_run.setAutoFillBackground(False)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/run-all"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolButton_run.setIcon(icon)
        self.toolButton_run.setIconSize(QtCore.QSize(30, 30))
        self.toolButton_run.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.toolButton_run.setArrowType(QtCore.Qt.NoArrow)
        self.toolButton_run.setObjectName("toolButton_run")
        self.horizontalLayout.addWidget(self.toolButton_run)
        spacerItem = QtWidgets.QSpacerItem(100, 30, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.mainVerticalLayout.addLayout(self.horizontalLayout)
        self.splitter = QtWidgets.QSplitter(CodeEditorUI)
        self.splitter.setLineWidth(0)
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setHandleWidth(0)
        self.splitter.setObjectName("splitter")
        self.widget_codeEdit = QtWidgets.QWidget(self.splitter)
        self.widget_codeEdit.setStyleSheet("")
        self.widget_codeEdit.setObjectName("widget_codeEdit")
        self.textEdit_log = QtWidgets.QTextEdit(self.splitter)
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei")
        font.setPointSize(-1)
        self.textEdit_log.setFont(font)
        self.textEdit_log.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.textEdit_log.setReadOnly(True)
        self.textEdit_log.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.textEdit_log.setObjectName("textEdit_log")
        self.mainVerticalLayout.addWidget(self.splitter)
        self.mainVerticalLayout.setStretch(0, 1)
        self.mainVerticalLayout.setStretch(1, 100)

        self.retranslateUi(CodeEditorUI)
        QtCore.QMetaObject.connectSlotsByName(CodeEditorUI)

    def retranslateUi(self, CodeEditorUI):
        _translate = QtCore.QCoreApplication.translate
        CodeEditorUI.setWindowTitle(_translate("CodeEditorUI", "Form"))
        self.toolButton_new.setText(_translate("CodeEditorUI", "新建"))
        self.toolButton_open.setText(_translate("CodeEditorUI", "打开"))
        self.toolButton_save.setText(_translate("CodeEditorUI", "保存"))
        self.toolButton_saveAs.setText(_translate("CodeEditorUI", "另存为"))
        self.toolButton_run.setToolTip(_translate("CodeEditorUI", "运行"))
        self.toolButton_run.setText(_translate("CodeEditorUI", "运行"))
        self.textEdit_log.setHtml(_translate("CodeEditorUI", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Microsoft YaHei\'; font-size:16px; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
import resources_rc
